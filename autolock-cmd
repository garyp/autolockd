#!/usr/bin/python3
# -*-python-*-

import argparse
import sys

import dbus

import autolockd


def lock(autlockd, args):
    autolockd.Lock()


def unlock(autolockd, args):
    autolockd.Unlock()


def disable(autolockd, args):
    autolockd.Disable()


def enable(autolockd, args):
    autolockd.Enable()


def open_autolockd(args):
    bus = dbus.SessionBus()

    try:
        autolockd_proxy = bus.get_object("net.zombofant.autolockd",
                                         "/net/zombofant/autolockd")
    except dbus.exceptions.DBusException as e:
        print("Could not get net.zombofant.autolockd dbus object.",
              "autolock-daemon running?", file=sys.stderr)
        sys.exit(1)

    autolockd = dbus.Interface(autolockd_proxy, "net.zombofant.autolockd")
    return autolockd

ap = argparse.ArgumentParser()

ap.add_argument('--version', action='version', version=autolockd.__version__)

ap_cmds = ap.add_subparsers()

lock_cmd = ap_cmds.add_parser('lock')
lock_cmd.set_defaults(func=lock)

unlock_cmd = ap_cmds.add_parser('unlock')
unlock_cmd.set_defaults(func=unlock)

disable_cmd = ap_cmds.add_parser('disable')
disable_cmd.set_defaults(func=disable)

enable_cmd = ap_cmds.add_parser('enable')
enable_cmd.set_defaults(func=enable)

args = ap.parse_args()

autolockd = open_autolockd(args)
args.func(autolockd, args)
